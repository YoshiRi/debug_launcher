<launch>

<!-- Run map launch, rviz-->
<set_parameter name="use_sim_time" value="true"/>


<!-- map args -->
<!-- <arg name="map_path" default="$(env HOME)/autoware_map/autoware_dev_kashiwanoha" /> -->
<arg name="map_name" default="odaiba" description="map name to load. when none is given, do not run map launch."/>
<arg name="map_path" default="$(env HOME)/autoware_map/$(var map_name)"/>
<!-- <arg name="rviz_config_path" default="$(env HOME)/debug_radar_tracker.rviz"/> -->
<arg name="rviz_config_path" default="$(find-pkg-share debug_launcher)/rviz/debug.rviz"/>
<!-- args -->
<arg name="publish_rate" default="10.0"/>
<arg name="radar_tracker_input" default="/perception/object_recognition/detection/radar/far_objects"/>
<arg name="radar_tracker_output" default="/perception/object_recognition/tracking/far_objects"/>
<arg name="enable_delay_compensation" default="true"/>
<arg name="run_prediction" default="true"/>
<arg name="use_tracking_merger" default="false"/>

<!-- config path control-->
<arg name="use_universe_path" default="false"/>
<arg name="map_based_prediction_config_path" default="$(find-pkg-share autoware_map_based_prediction)/config/" if="$(var use_universe_path)"/>
<arg name="multi_object_tracker_config_path" default="$(find-pkg-share autoware_multi_object_tracker)/config" if="$(var use_universe_path)"/>
<arg name="tracking_object_merger_config_path" default="$(find-pkg-share autoware_tracking_object_merger)/config" if="$(var use_universe_path)"/>
<arg name="radar_object_tracker_config_path" default="$(find-pkg-share autoware_radar_object_tracker)/config" if="$(var use_universe_path)"/>
<arg name="map_based_prediction_config_path" default="$(find-pkg-share autoware_launch)/config/perception/object_recognition/prediction" unless="$(var use_universe_path)"/>
<arg name="multi_object_tracker_config_path" default="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker" unless="$(var use_universe_path)"/>
<arg name="tracking_object_merger_config_path" default="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/tracking_object_merger" unless="$(var use_universe_path)"/>
<arg name="radar_object_tracker_config_path" default="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker" unless="$(var use_universe_path)"/>


<!-- launch map unless map name is "none" -->
<group unless="$(eval '&quot;$(var map_name)&quot;==&quot;none&quot;')">
    <include file="$(find-pkg-share debug_launcher)/launch/map.launch.xml">
        <arg name="map_path" value="$(var map_path)"/>
        <arg name="rviz_config_path" value="$(var rviz_config_path)"/>
    </include>
</group>

<!-- tracking -->
<!--multi object tracking for near objects-->
<group>
<push-ros-namespace namespace="/perception/object_recognition/tracking"/>
<let name="mot_output" value="/perception/object_recognition/tracking/near_objects" if="$(var use_tracking_merger)"/>
<let name="mot_output" value="/perception/object_recognition/tracking/objects" unless="$(var use_tracking_merger)"/>

<include file="$(find-pkg-share autoware_multi_object_tracker)/launch/multi_object_tracker.launch.xml">
    <arg name="output" value="$(var mot_output)"/>
    <arg name="tracker_setting_path" value="$(var multi_object_tracker_config_path)/multi_object_tracker_node.param.yaml"/>
    <arg name="data_association_matrix_path" value="$(var multi_object_tracker_config_path)/data_association_matrix.param.yaml"/>
</include>

<!--radar long range dynamic object tracking-->
<!-- <include file="$(find-pkg-share autoware_radar_object_tracker)/launch/radar_object_tracker.launch.xml">
    <arg name="publish_rate" value="$(var publish_rate)"/>
    <arg name="enable_delay_compensation" value="$(var enable_delay_compensation)"/>
    <arg name="input" value="$(var radar_tracker_input)"/>
    <arg name="output" value="$(var radar_tracker_output)"/>
    <arg name="data_association_matrix_path" value="$(var radar_object_tracker_config_path)/data_association_matrix.param.yaml"/>
    <arg name="radar_object_tracker_param_path" value="$(var radar_object_tracker_config_path)/radar_object_tracker.param.yaml"/>
</include> -->

<!--tracking object merger to merge near objects and far objects -->
<group if="$(var use_tracking_merger)">
    <include file="$(find-pkg-share autoware_tracking_object_merger)/launch/decorative_tracker_merger.launch.xml">
        <arg name="input/main_object" value="/perception/object_recognition/tracking/near_objects"/>
        <arg name="input/sub_object" value="$(var radar_tracker_output)"/>
        <arg name="output" value="/perception/object_recognition/tracking/objects"/>
        <arg name="data_association_matrix_path" value="$(var tracking_object_merger_config_path)/data_association_matrix.param.yaml"/>
        <arg name="merge_options_path" value="$(var tracking_object_merger_config_path)/decorative_tracker_merger_policy.param.yaml"/>
    </include>
</group>

</group>


<!-- prediction -->
<group if="$(var run_prediction)">
<push-ros-namespace namespace="/perception/object_recognition/prediction"/>
<let name="input/objects" value="/perception/object_recognition/tracking/objects"/>
<!-- <let name="input/objects" value="/perception/object_recognition/tracking/near_objects" unless="$(var use_tracking_merger)"/> -->
<let name="output/objects" value="/perception/object_recognition/objects"/>
<include file="$(find-pkg-share autoware_map_based_prediction)/launch/map_based_prediction.launch.xml">
    <arg name="output_topic" value="$(var output/objects)"/>
    <arg name="input_topic" value="$(var input/objects)"/>
    <arg name="param_path" value="$(var map_based_prediction_config_path)/map_based_prediction.param.yaml"/>
</include>
</group>

</launch>